import { IsError } from "./IsError";
import { ValidationConstraintEnum } from "./ValidationConstraintEnum";
import { Types } from "./types";
/**
 * Checks if value > target.
 * @param value The value being checked.
 * @param target The target value to perform the check against.
 * @return True if the value is greater than the target, false otherwise.
 */
export function isGreaterThan(value, target) {
    return typeof value === "number" && typeof target === "number" && value > target;
}
export function isGreaterThanError(value, target, field, code) {
    if (!isGreaterThan(value, target)) {
        const message = `The value (${value}) of the field ${field} should be greater ${target}.`;
        throw new IsError(message, value, field, ValidationConstraintEnum.IS_GREATER_THAN, Types.NUMBER, code);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNHcmVhdGVyVGhhbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXJlZmx5c2VtYW50aWNzL2lzLyIsInNvdXJjZXMiOlsibGliL0lzR3JlYXRlclRoYW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNwQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRWhDOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLGFBQWEsQ0FBQyxLQUFhLEVBQUUsTUFBYztJQUN2RCxPQUFPLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxPQUFPLE1BQU0sS0FBSyxRQUFRLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQztBQUNuRixDQUFDO0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUFDLEtBQWEsRUFBRSxNQUFjLEVBQUUsS0FBYSxFQUFFLElBQWE7SUFDNUYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDakMsTUFBTSxPQUFPLEdBQVcsY0FBYyxLQUFLLGtCQUFrQixLQUFLLHNCQUFzQixNQUFNLEdBQUcsQ0FBQztRQUNsRyxNQUFNLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLHdCQUF3QixDQUFDLGVBQWUsRUFBRSxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQ3hHO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElzRXJyb3IgfSBmcm9tIFwiLi9Jc0Vycm9yXCI7XG5pbXBvcnQgeyBWYWxpZGF0aW9uQ29uc3RyYWludEVudW0gfSBmcm9tIFwiLi9WYWxpZGF0aW9uQ29uc3RyYWludEVudW1cIjtcbmltcG9ydCB7IFR5cGVzIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuLyoqXG4gKiBDaGVja3MgaWYgdmFsdWUgPiB0YXJnZXQuXG4gKiBAcGFyYW0gdmFsdWUgVGhlIHZhbHVlIGJlaW5nIGNoZWNrZWQuXG4gKiBAcGFyYW0gdGFyZ2V0IFRoZSB0YXJnZXQgdmFsdWUgdG8gcGVyZm9ybSB0aGUgY2hlY2sgYWdhaW5zdC5cbiAqIEByZXR1cm4gVHJ1ZSBpZiB0aGUgdmFsdWUgaXMgZ3JlYXRlciB0aGFuIHRoZSB0YXJnZXQsIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzR3JlYXRlclRoYW4odmFsdWU6IG51bWJlciwgdGFyZ2V0OiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiICYmIHR5cGVvZiB0YXJnZXQgPT09IFwibnVtYmVyXCIgJiYgdmFsdWUgPiB0YXJnZXQ7XG4gIH1cbiAgXG4gIGV4cG9ydCBmdW5jdGlvbiBpc0dyZWF0ZXJUaGFuRXJyb3IodmFsdWU6IG51bWJlciwgdGFyZ2V0OiBudW1iZXIsIGZpZWxkOiBzdHJpbmcsIGNvZGU/OiBzdHJpbmcpOiB2b2lkIHsgIFxuICAgIGlmICghaXNHcmVhdGVyVGhhbih2YWx1ZSwgdGFyZ2V0KSkge1xuICAgICAgY29uc3QgbWVzc2FnZTogc3RyaW5nID0gYFRoZSB2YWx1ZSAoJHt2YWx1ZX0pIG9mIHRoZSBmaWVsZCAke2ZpZWxkfSBzaG91bGQgYmUgZ3JlYXRlciAke3RhcmdldH0uYDtcbiAgICAgIHRocm93IG5ldyBJc0Vycm9yKG1lc3NhZ2UsIHZhbHVlLCBmaWVsZCwgVmFsaWRhdGlvbkNvbnN0cmFpbnRFbnVtLklTX0dSRUFURVJfVEhBTiwgVHlwZXMuTlVNQkVSLCBjb2RlKTtcbiAgICB9XG4gIH1cbiAgIl19