import { ValidationConstraintEnum } from "./ValidationConstraintEnum";
import { Types } from "./types";
import { IsError } from "./IsError";
/**
 * Checks if value >= target.
 * @param value The value being checked.
 * @param target The target value to perform the check against.
 * @return True if the value is greater or equal to the target, false otherwise.
 */
export function isGreaterThanOrEqualTo(value, target) {
    return typeof value === "number" && typeof target === "number" && value >= target;
}
export function isGreaterThanOrEqualToError(value, target, field, code) {
    var CONSTRAINT = "IsGreaterThanOrEqualTo";
    if (!isGreaterThanOrEqualTo(value, target)) {
        var message = "The value (" + value + ") of the field " + field + " should be greater than or equal to " + target + ".";
        throw new IsError(message, value, field, ValidationConstraintEnum.IS_GREATER_THAN_OR_EQUAL_TO, Types.NUMBER, code);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNHcmVhdGVyVGhhbk9yRXF1YWxUby5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXJlZmx5c2VtYW50aWNzL2lzLyIsInNvdXJjZXMiOlsibGliL0lzR3JlYXRlclRoYW5PckVxdWFsVG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDdEUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNoQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXBDOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLHNCQUFzQixDQUFDLEtBQWEsRUFBRSxNQUFjO0lBQ2hFLE9BQU8sT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsSUFBSSxLQUFLLElBQUksTUFBTSxDQUFDO0FBQ3BGLENBQUM7QUFFRCxNQUFNLFVBQVUsMkJBQTJCLENBQUMsS0FBYSxFQUFFLE1BQWMsRUFBRSxLQUFhLEVBQUUsSUFBYTtJQUNyRyxJQUFNLFVBQVUsR0FBRyx3QkFBd0IsQ0FBQztJQUU1QyxJQUFJLENBQUMsc0JBQXNCLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxFQUFFO1FBQzFDLElBQU0sT0FBTyxHQUFXLGdCQUFjLEtBQUssdUJBQWtCLEtBQUssNENBQXVDLE1BQU0sTUFBRyxDQUFDO1FBQ25ILE1BQU0sSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsd0JBQXdCLENBQUMsMkJBQTJCLEVBQUUsS0FBSyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztLQUNwSDtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWYWxpZGF0aW9uQ29uc3RyYWludEVudW0gfSBmcm9tIFwiLi9WYWxpZGF0aW9uQ29uc3RyYWludEVudW1cIjtcbmltcG9ydCB7IFR5cGVzIH0gZnJvbSBcIi4vdHlwZXNcIjtcbmltcG9ydCB7IElzRXJyb3IgfSBmcm9tIFwiLi9Jc0Vycm9yXCI7XG5cbi8qKlxuICogQ2hlY2tzIGlmIHZhbHVlID49IHRhcmdldC5cbiAqIEBwYXJhbSB2YWx1ZSBUaGUgdmFsdWUgYmVpbmcgY2hlY2tlZC5cbiAqIEBwYXJhbSB0YXJnZXQgVGhlIHRhcmdldCB2YWx1ZSB0byBwZXJmb3JtIHRoZSBjaGVjayBhZ2FpbnN0LlxuICogQHJldHVybiBUcnVlIGlmIHRoZSB2YWx1ZSBpcyBncmVhdGVyIG9yIGVxdWFsIHRvIHRoZSB0YXJnZXQsIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzR3JlYXRlclRoYW5PckVxdWFsVG8odmFsdWU6IG51bWJlciwgdGFyZ2V0OiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiICYmIHR5cGVvZiB0YXJnZXQgPT09IFwibnVtYmVyXCIgJiYgdmFsdWUgPj0gdGFyZ2V0O1xuICB9XG4gIFxuICBleHBvcnQgZnVuY3Rpb24gaXNHcmVhdGVyVGhhbk9yRXF1YWxUb0Vycm9yKHZhbHVlOiBudW1iZXIsIHRhcmdldDogbnVtYmVyLCBmaWVsZDogc3RyaW5nLCBjb2RlPzogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc3QgQ09OU1RSQUlOVCA9IFwiSXNHcmVhdGVyVGhhbk9yRXF1YWxUb1wiO1xuICBcbiAgICBpZiAoIWlzR3JlYXRlclRoYW5PckVxdWFsVG8odmFsdWUsIHRhcmdldCkpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2U6IHN0cmluZyA9IGBUaGUgdmFsdWUgKCR7dmFsdWV9KSBvZiB0aGUgZmllbGQgJHtmaWVsZH0gc2hvdWxkIGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke3RhcmdldH0uYDtcbiAgICAgIHRocm93IG5ldyBJc0Vycm9yKG1lc3NhZ2UsIHZhbHVlLCBmaWVsZCwgVmFsaWRhdGlvbkNvbnN0cmFpbnRFbnVtLklTX0dSRUFURVJfVEhBTl9PUl9FUVVBTF9UTywgVHlwZXMuTlVNQkVSLCBjb2RlKTtcbiAgICB9XG4gIH1cbiAgXG4gICJdfQ==