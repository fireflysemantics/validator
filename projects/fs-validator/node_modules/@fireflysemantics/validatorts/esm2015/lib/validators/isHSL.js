import { assertString } from '../util/assertString';
const hslcomma = /^(hsl)a?\(\s*((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?))(deg|grad|rad|turn|\s*)(\s*,\s*(\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%){2}\s*(,\s*((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%?)\s*)?\)$/i;
const hslspace = /^(hsl)a?\(\s*((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?))(deg|grad|rad|turn|\s)(\s*(\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%){2}\s*(\/\s*((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%?)\s*)?\)$/i;
/**
 * Checks whether the `target` is HSL color
 *
 * @param target The target string
 * @return true if the `target` is HSL color, false otherwise
 */
export function isHSL(str) {
    assertString(str);
    return hslcomma.test(str) || hslspace.test(str);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNIU0wuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmlyZWZseXNlbWFudGljcy92YWxpZGF0b3J0cy8iLCJzb3VyY2VzIjpbImxpYi92YWxpZGF0b3JzL2lzSFNMLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUdwRCxNQUFNLFFBQVEsR0FBRyxrU0FBa1MsQ0FBQztBQUNwVCxNQUFNLFFBQVEsR0FBRyw4UkFBOFIsQ0FBQztBQUdoVDs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxLQUFLLENBQUMsR0FBVztJQUMvQixZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEIsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDbEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydFN0cmluZyB9IGZyb20gJy4uL3V0aWwvYXNzZXJ0U3RyaW5nJztcblxuXG5jb25zdCBoc2xjb21tYSA9IC9eKGhzbClhP1xcKFxccyooKFxcK3xcXC0pPyhbMC05XSsoXFwuWzAtOV0rKT8oZShcXCt8XFwtKT9bMC05XSspP3xcXC5bMC05XSsoZShcXCt8XFwtKT9bMC05XSspPykpKGRlZ3xncmFkfHJhZHx0dXJufFxccyopKFxccyosXFxzKihcXCt8XFwtKT8oWzAtOV0rKFxcLlswLTldKyk/KGUoXFwrfFxcLSk/WzAtOV0rKT98XFwuWzAtOV0rKGUoXFwrfFxcLSk/WzAtOV0rKT8pJSl7Mn1cXHMqKCxcXHMqKChcXCt8XFwtKT8oWzAtOV0rKFxcLlswLTldKyk/KGUoXFwrfFxcLSk/WzAtOV0rKT98XFwuWzAtOV0rKGUoXFwrfFxcLSk/WzAtOV0rKT8pJT8pXFxzKik/XFwpJC9pO1xuY29uc3QgaHNsc3BhY2UgPSAvXihoc2wpYT9cXChcXHMqKChcXCt8XFwtKT8oWzAtOV0rKFxcLlswLTldKyk/KGUoXFwrfFxcLSk/WzAtOV0rKT98XFwuWzAtOV0rKGUoXFwrfFxcLSk/WzAtOV0rKT8pKShkZWd8Z3JhZHxyYWR8dHVybnxcXHMpKFxccyooXFwrfFxcLSk/KFswLTldKyhcXC5bMC05XSspPyhlKFxcK3xcXC0pP1swLTldKyk/fFxcLlswLTldKyhlKFxcK3xcXC0pP1swLTldKyk/KSUpezJ9XFxzKihcXC9cXHMqKChcXCt8XFwtKT8oWzAtOV0rKFxcLlswLTldKyk/KGUoXFwrfFxcLSk/WzAtOV0rKT98XFwuWzAtOV0rKGUoXFwrfFxcLSk/WzAtOV0rKT8pJT8pXFxzKik/XFwpJC9pO1xuXG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgdGhlIGB0YXJnZXRgIGlzIEhTTCBjb2xvclxuICogXG4gKiBAcGFyYW0gdGFyZ2V0IFRoZSB0YXJnZXQgc3RyaW5nXG4gKiBAcmV0dXJuIHRydWUgaWYgdGhlIGB0YXJnZXRgIGlzIEhTTCBjb2xvciwgZmFsc2Ugb3RoZXJ3aXNlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0hTTChzdHI6IHN0cmluZykge1xuICBhc3NlcnRTdHJpbmcoc3RyKTtcbiAgcmV0dXJuIGhzbGNvbW1hLnRlc3Qoc3RyKSB8fCBoc2xzcGFjZS50ZXN0KHN0cik7XG59XG4iXX0=