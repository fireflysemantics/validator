import { assertString } from '../util/assertString';
const isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;
/**
 * Test whether the target string is an ISBN number.
 *
 * @param target The string
 * @return true if the `target` string is an ISIN number, false otherwise
 */
export function isISIN(target) {
    assertString(target);
    if (!isin.test(target)) {
        return false;
    }
    const checksumStr = target.replace(/[A-Z]/g, character => {
        const intValue = (parseInt(character, 36));
        return intValue ? intValue.toString() : '';
    });
    let sum = 0;
    let digit;
    let tmpNum;
    let shouldDouble = true;
    for (let i = checksumStr.length - 2; i >= 0; i--) {
        digit = checksumStr.substring(i, (i + 1));
        tmpNum = parseInt(digit, 10);
        if (shouldDouble) {
            tmpNum *= 2;
            if (tmpNum >= 10) {
                sum += tmpNum + 1;
            }
            else {
                sum += tmpNum;
            }
        }
        else {
            sum += tmpNum;
        }
        shouldDouble = !shouldDouble;
    }
    return parseInt(target.substr(target.length - 1), 10) === (10000 - sum) % 10;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNJU0lOLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpcmVmbHlzZW1hbnRpY3MvdmFsaWRhdG9ydHMvIiwic291cmNlcyI6WyJsaWIvdmFsaWRhdG9ycy9pc0lTSU4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXBELE1BQU0sSUFBSSxHQUFHLDRCQUE0QixDQUFDO0FBRzFDOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FBQyxNQUFhO0lBQ2xDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUN0QixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLEVBQUU7UUFDdkQsTUFBTSxRQUFRLEdBQUcsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUE7UUFDMUMsT0FBTyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBO0lBQzVDLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ1osSUFBSSxLQUFLLENBQUM7SUFDVixJQUFJLE1BQU0sQ0FBQztJQUNYLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQztJQUN4QixLQUFLLElBQUksQ0FBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDaEQsS0FBSyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDN0IsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLENBQUMsQ0FBQztZQUNaLElBQUksTUFBTSxJQUFJLEVBQUUsRUFBRTtnQkFDaEIsR0FBRyxJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUM7YUFDbkI7aUJBQU07Z0JBQ0wsR0FBRyxJQUFJLE1BQU0sQ0FBQzthQUNmO1NBQ0Y7YUFBTTtZQUNMLEdBQUcsSUFBSSxNQUFNLENBQUM7U0FDZjtRQUNELFlBQVksR0FBRyxDQUFDLFlBQVksQ0FBQztLQUM5QjtJQUVELE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDL0UsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydFN0cmluZyB9IGZyb20gJy4uL3V0aWwvYXNzZXJ0U3RyaW5nJztcblxuY29uc3QgaXNpbiA9IC9eW0EtWl17Mn1bMC05QS1aXXs5fVswLTldJC87XG5cblxuLyoqXG4gKiBUZXN0IHdoZXRoZXIgdGhlIHRhcmdldCBzdHJpbmcgaXMgYW4gSVNCTiBudW1iZXIuXG4gKiBcbiAqIEBwYXJhbSB0YXJnZXQgVGhlIHN0cmluZ1xuICogQHJldHVybiB0cnVlIGlmIHRoZSBgdGFyZ2V0YCBzdHJpbmcgaXMgYW4gSVNJTiBudW1iZXIsIGZhbHNlIG90aGVyd2lzZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNJU0lOKHRhcmdldDpzdHJpbmcpIHtcbiAgYXNzZXJ0U3RyaW5nKHRhcmdldCk7XG4gIGlmICghaXNpbi50ZXN0KHRhcmdldCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBjb25zdCBjaGVja3N1bVN0ciA9IHRhcmdldC5yZXBsYWNlKC9bQS1aXS9nLCBjaGFyYWN0ZXIgPT4ge1xuICAgIGNvbnN0IGludFZhbHVlID0gKHBhcnNlSW50KGNoYXJhY3RlciwgMzYpKVxuICAgIHJldHVybiBpbnRWYWx1ZSA/IGludFZhbHVlLnRvU3RyaW5nKCkgOiAnJ1xuICB9KTtcblxuICBsZXQgc3VtID0gMDtcbiAgbGV0IGRpZ2l0O1xuICBsZXQgdG1wTnVtO1xuICBsZXQgc2hvdWxkRG91YmxlID0gdHJ1ZTtcbiAgZm9yIChsZXQgaSA9IGNoZWNrc3VtU3RyLmxlbmd0aCAtIDI7IGkgPj0gMDsgaS0tKSB7XG4gICAgZGlnaXQgPSBjaGVja3N1bVN0ci5zdWJzdHJpbmcoaSwgKGkgKyAxKSk7XG4gICAgdG1wTnVtID0gcGFyc2VJbnQoZGlnaXQsIDEwKTtcbiAgICBpZiAoc2hvdWxkRG91YmxlKSB7XG4gICAgICB0bXBOdW0gKj0gMjtcbiAgICAgIGlmICh0bXBOdW0gPj0gMTApIHtcbiAgICAgICAgc3VtICs9IHRtcE51bSArIDE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdW0gKz0gdG1wTnVtO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzdW0gKz0gdG1wTnVtO1xuICAgIH1cbiAgICBzaG91bGREb3VibGUgPSAhc2hvdWxkRG91YmxlO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlSW50KHRhcmdldC5zdWJzdHIodGFyZ2V0Lmxlbmd0aCAtIDEpLCAxMCkgPT09ICgxMDAwMCAtIHN1bSkgJSAxMDtcbn1cbiJdfQ==