import { assertString } from '../util/assertString';
import { alpha } from './alpha';
/**
 * Checks whether `arg` is in alpha and if so validates whether
 * the `target` string conforms to the `arg` locale.
 *
 * @param target The target string to compare to
 * @param arg The argument that might equal the target
 * @return true if the `target` date comes after the `arg` date, false otherwise
 */
export function isAlpha(target, arg = 'en-US') {
    assertString(target);
    if (arg in alpha) {
        return alpha[arg].test(target);
    }
    throw new Error(`Invalid locale '${arg}'`);
}
/**
 * The alpha locales
 */
export const isAlphaLocales = Object.keys(alpha);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNBbHBoYS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXJlZmx5c2VtYW50aWNzL3ZhbGlkYXRvcnRzLyIsInNvdXJjZXMiOlsibGliL3ZhbGlkYXRvcnMvaXNBbHBoYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDcEQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVoQzs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxVQUFVLE9BQU8sQ0FBQyxNQUFjLEVBQUUsTUFBYyxPQUFPO0lBQzNELFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQixJQUFJLEdBQUcsSUFBSSxLQUFLLEVBQUU7UUFDaEIsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ2hDO0lBQ0QsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsR0FBRyxHQUFHLENBQUMsQ0FBQztBQUM3QyxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydFN0cmluZyB9IGZyb20gJy4uL3V0aWwvYXNzZXJ0U3RyaW5nJztcbmltcG9ydCB7IGFscGhhIH0gZnJvbSAnLi9hbHBoYSc7XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgYGFyZ2AgaXMgaW4gYWxwaGEgYW5kIGlmIHNvIHZhbGlkYXRlcyB3aGV0aGVyXG4gKiB0aGUgYHRhcmdldGAgc3RyaW5nIGNvbmZvcm1zIHRvIHRoZSBgYXJnYCBsb2NhbGUuXG4gKiBcbiAqIEBwYXJhbSB0YXJnZXQgVGhlIHRhcmdldCBzdHJpbmcgdG8gY29tcGFyZSB0b1xuICogQHBhcmFtIGFyZyBUaGUgYXJndW1lbnQgdGhhdCBtaWdodCBlcXVhbCB0aGUgdGFyZ2V0IFxuICogQHJldHVybiB0cnVlIGlmIHRoZSBgdGFyZ2V0YCBkYXRlIGNvbWVzIGFmdGVyIHRoZSBgYXJnYCBkYXRlLCBmYWxzZSBvdGhlcndpc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQWxwaGEodGFyZ2V0OiBzdHJpbmcsIGFyZzogc3RyaW5nID0gJ2VuLVVTJykge1xuICBhc3NlcnRTdHJpbmcodGFyZ2V0KTtcbiAgaWYgKGFyZyBpbiBhbHBoYSkge1xuICAgIHJldHVybiBhbHBoYVthcmddLnRlc3QodGFyZ2V0KTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbG9jYWxlICcke2FyZ30nYCk7XG59XG5cbi8qKlxuICogVGhlIGFscGhhIGxvY2FsZXNcbiAqL1xuZXhwb3J0IGNvbnN0IGlzQWxwaGFMb2NhbGVzID0gT2JqZWN0LmtleXMoYWxwaGEpOyJdfQ==