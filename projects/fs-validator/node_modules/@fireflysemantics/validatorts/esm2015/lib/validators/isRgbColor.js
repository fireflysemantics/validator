import { assertString } from '../util/assertString';
const rgbColor = /^rgb\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\)$/;
const rgbaColor = /^rgba\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\.\d|1(\.0)?|0(\.0)?)\)$/;
const rgbColorPercent = /^rgb\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\)/;
const rgbaColorPercent = /^rgba\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\.\d|1(\.0)?|0(\.0)?)\)/;
/**
 * Check if `target` is a valid RGB color
 *
 * @param target The RGB color
 * @return true if the `target` is a valid RGB color, false otherwise
 *
 */
export function isRgbColor(target, includePercentValues = `true`) {
    assertString(target);
    if (!includePercentValues) {
        return rgbColor.test(target) || rgbaColor.test(target);
    }
    return rgbColor.test(target) ||
        rgbaColor.test(target) ||
        rgbColorPercent.test(target) ||
        rgbaColorPercent.test(target);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNSZ2JDb2xvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXJlZmx5c2VtYW50aWNzL3ZhbGlkYXRvcnRzLyIsInNvdXJjZXMiOlsibGliL3ZhbGlkYXRvcnMvaXNSZ2JDb2xvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFcEQsTUFBTSxRQUFRLEdBQUcscUhBQXFILENBQUM7QUFDdkksTUFBTSxTQUFTLEdBQUcsNEZBQTRGLENBQUM7QUFDL0csTUFBTSxlQUFlLEdBQUcsa0VBQWtFLENBQUM7QUFDM0YsTUFBTSxnQkFBZ0IsR0FBRyxrRUFBa0UsQ0FBQztBQUU1Rjs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsVUFBVSxDQUFDLE1BQWEsRUFBRSx1QkFBOEIsTUFBTTtJQUM1RSxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFckIsSUFBSSxDQUFDLG9CQUFvQixFQUFFO1FBQ3pCLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ3hEO0lBRUQsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxQixTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN0QixlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUM1QixnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydFN0cmluZyB9IGZyb20gJy4uL3V0aWwvYXNzZXJ0U3RyaW5nJztcblxuY29uc3QgcmdiQ29sb3IgPSAvXnJnYlxcKCgoWzAtOV18WzEtOV1bMC05XXwxWzAtOV1bMC05XXwyWzAtNF1bMC05XXwyNVswLTVdKSwpezJ9KFswLTldfFsxLTldWzAtOV18MVswLTldWzAtOV18MlswLTRdWzAtOV18MjVbMC01XSlcXCkkLztcbmNvbnN0IHJnYmFDb2xvciA9IC9ecmdiYVxcKCgoWzAtOV18WzEtOV1bMC05XXwxWzAtOV1bMC05XXwyWzAtNF1bMC05XXwyNVswLTVdKSwpezN9KDA/XFwuXFxkfDEoXFwuMCk/fDAoXFwuMCk/KVxcKSQvO1xuY29uc3QgcmdiQ29sb3JQZXJjZW50ID0gL15yZ2JcXCgoKFswLTldJXxbMS05XVswLTldJXwxMDAlKSwpezJ9KFswLTldJXxbMS05XVswLTldJXwxMDAlKVxcKS87XG5jb25zdCByZ2JhQ29sb3JQZXJjZW50ID0gL15yZ2JhXFwoKChbMC05XSV8WzEtOV1bMC05XSV8MTAwJSksKXszfSgwP1xcLlxcZHwxKFxcLjApP3wwKFxcLjApPylcXCkvO1xuXG4vKipcbiAqIENoZWNrIGlmIGB0YXJnZXRgIGlzIGEgdmFsaWQgUkdCIGNvbG9yXG4gKlxuICogQHBhcmFtIHRhcmdldCBUaGUgUkdCIGNvbG9yXG4gKiBAcmV0dXJuIHRydWUgaWYgdGhlIGB0YXJnZXRgIGlzIGEgdmFsaWQgUkdCIGNvbG9yLCBmYWxzZSBvdGhlcndpc2VcbiAqIFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNSZ2JDb2xvcih0YXJnZXQ6c3RyaW5nLCBpbmNsdWRlUGVyY2VudFZhbHVlczpzdHJpbmcgPSBgdHJ1ZWApIHtcbiAgYXNzZXJ0U3RyaW5nKHRhcmdldCk7XG5cbiAgaWYgKCFpbmNsdWRlUGVyY2VudFZhbHVlcykge1xuICAgIHJldHVybiByZ2JDb2xvci50ZXN0KHRhcmdldCkgfHwgcmdiYUNvbG9yLnRlc3QodGFyZ2V0KTtcbiAgfVxuXG4gIHJldHVybiByZ2JDb2xvci50ZXN0KHRhcmdldCkgfHxcbiAgICByZ2JhQ29sb3IudGVzdCh0YXJnZXQpIHx8XG4gICAgcmdiQ29sb3JQZXJjZW50LnRlc3QodGFyZ2V0KSB8fFxuICAgIHJnYmFDb2xvclBlcmNlbnQudGVzdCh0YXJnZXQpO1xufVxuIl19