/**
 * Reference:
 * https://en.wikipedia.org/ -- Wikipedia
 * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number
 * https://countrycode.org/ -- Country Codes
 */
const passportRegexByCountryCode = {
    AM: /^[A-Z]{2}\d{7}$/,
    AR: /^[A-Z]{3}\d{6}$/,
    AT: /^[A-Z]\d{7}$/,
    AU: /^[A-Z]\d{7}$/,
    BE: /^[A-Z]{2}\d{6}$/,
    BG: /^\d{9}$/,
    CA: /^[A-Z]{2}\d{6}$/,
    CH: /^[A-Z]\d{7}$/,
    CN: /^[GE]\d{8}$/,
    CY: /^[A-Z](\d{6}|\d{8})$/,
    CZ: /^\d{8}$/,
    DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,
    DK: /^\d{9}$/,
    EE: /^([A-Z]\d{7}|[A-Z]{2}\d{7})$/,
    ES: /^[A-Z0-9]{2}([A-Z0-9]?)\d{6}$/,
    FI: /^[A-Z]{2}\d{7}$/,
    FR: /^\d{2}[A-Z]{2}\d{5}$/,
    GB: /^\d{9}$/,
    GR: /^[A-Z]{2}\d{7}$/,
    HR: /^\d{9}$/,
    HU: /^[A-Z]{2}(\d{6}|\d{7})$/,
    IE: /^[A-Z0-9]{2}\d{7}$/,
    IS: /^(A)\d{7}$/,
    IT: /^[A-Z0-9]{2}\d{7}$/,
    JP: /^[A-Z]{2}\d{7}$/,
    KR: /^[MS]\d{8}$/,
    LT: /^[A-Z0-9]{8}$/,
    LU: /^[A-Z0-9]{8}$/,
    LV: /^[A-Z0-9]{2}\d{7}$/,
    MT: /^\d{7}$/,
    NL: /^[A-Z]{2}[A-Z0-9]{6}\d$/,
    PO: /^[A-Z]{2}\d{7}$/,
    PT: /^[A-Z]\d{6}$/,
    RO: /^\d{8,9}$/,
    SE: /^\d{8}$/,
    SL: /^(P)[A-Z]\d{7}$/,
    SK: /^[0-9A-Z]\d{7}$/,
    TR: /^[A-Z]\d{8}$/,
    UA: /^[A-Z]{2}\d{6}$/,
    US: /^\d{9}$/,
};
/**
 * Check if `target` is a valid passport number
 * relative to provided `arg` ISO Country Code.
 *
 * @param target The passport number
 * @param arg The country code
 * @return true if the `target` is a passport number, false otherwise
 */
export function isPassportNumber(target, arg) {
    /** Remove All Whitespaces, Convert to UPPERCASE */
    const normalizedStr = target.replace(/\s/g, '').toUpperCase();
    return (arg.toUpperCase() in passportRegexByCountryCode) &&
        passportRegexByCountryCode[arg].test(normalizedStr);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNQYXNzcG9ydE51bWJlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXJlZmx5c2VtYW50aWNzL3ZhbGlkYXRvcnRzLyIsInNvdXJjZXMiOlsibGliL3ZhbGlkYXRvcnMvaXNQYXNzcG9ydE51bWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7R0FLRztBQUNILE1BQU0sMEJBQTBCLEdBQUc7SUFDakMsRUFBRSxFQUFFLGlCQUFpQjtJQUNyQixFQUFFLEVBQUUsaUJBQWlCO0lBQ3JCLEVBQUUsRUFBRSxjQUFjO0lBQ2xCLEVBQUUsRUFBRSxjQUFjO0lBQ2xCLEVBQUUsRUFBRSxpQkFBaUI7SUFDckIsRUFBRSxFQUFFLFNBQVM7SUFDYixFQUFFLEVBQUUsaUJBQWlCO0lBQ3JCLEVBQUUsRUFBRSxjQUFjO0lBQ2xCLEVBQUUsRUFBRSxhQUFhO0lBQ2pCLEVBQUUsRUFBRSxzQkFBc0I7SUFDMUIsRUFBRSxFQUFFLFNBQVM7SUFDYixFQUFFLEVBQUUsNkJBQTZCO0lBQ2pDLEVBQUUsRUFBRSxTQUFTO0lBQ2IsRUFBRSxFQUFFLDhCQUE4QjtJQUNsQyxFQUFFLEVBQUUsK0JBQStCO0lBQ25DLEVBQUUsRUFBRSxpQkFBaUI7SUFDckIsRUFBRSxFQUFFLHNCQUFzQjtJQUMxQixFQUFFLEVBQUUsU0FBUztJQUNiLEVBQUUsRUFBRSxpQkFBaUI7SUFDckIsRUFBRSxFQUFFLFNBQVM7SUFDYixFQUFFLEVBQUUseUJBQXlCO0lBQzdCLEVBQUUsRUFBRSxvQkFBb0I7SUFDeEIsRUFBRSxFQUFFLFlBQVk7SUFDaEIsRUFBRSxFQUFFLG9CQUFvQjtJQUN4QixFQUFFLEVBQUUsaUJBQWlCO0lBQ3JCLEVBQUUsRUFBRSxhQUFhO0lBQ2pCLEVBQUUsRUFBRSxlQUFlO0lBQ25CLEVBQUUsRUFBRSxlQUFlO0lBQ25CLEVBQUUsRUFBRSxvQkFBb0I7SUFDeEIsRUFBRSxFQUFFLFNBQVM7SUFDYixFQUFFLEVBQUUseUJBQXlCO0lBQzdCLEVBQUUsRUFBRSxpQkFBaUI7SUFDckIsRUFBRSxFQUFFLGNBQWM7SUFDbEIsRUFBRSxFQUFFLFdBQVc7SUFDZixFQUFFLEVBQUUsU0FBUztJQUNiLEVBQUUsRUFBRSxpQkFBaUI7SUFDckIsRUFBRSxFQUFFLGlCQUFpQjtJQUNyQixFQUFFLEVBQUUsY0FBYztJQUNsQixFQUFFLEVBQUUsaUJBQWlCO0lBQ3JCLEVBQUUsRUFBRSxTQUFTO0NBQ2QsQ0FBQztBQUVGOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsTUFBYSxFQUFFLEdBQVU7SUFDeEQsbURBQW1EO0lBQ25ELE1BQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBRTlELE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLElBQUksMEJBQTBCLENBQUM7UUFDdEQsMEJBQTBCLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlZmVyZW5jZTpcbiAqIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy8gLS0gV2lraXBlZGlhXG4gKiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtMzY1L2NvbXBsaWFuY2UvZXUtcGFzc3BvcnQtbnVtYmVyIC0tIEVVIFBhc3Nwb3J0IE51bWJlclxuICogaHR0cHM6Ly9jb3VudHJ5Y29kZS5vcmcvIC0tIENvdW50cnkgQ29kZXNcbiAqL1xuY29uc3QgcGFzc3BvcnRSZWdleEJ5Q291bnRyeUNvZGUgPSB7XG4gIEFNOiAvXltBLVpdezJ9XFxkezd9JC8sIC8vIEFSTUVOSUFcbiAgQVI6IC9eW0EtWl17M31cXGR7Nn0kLywgLy8gQVJHRU5USU5BXG4gIEFUOiAvXltBLVpdXFxkezd9JC8sIC8vIEFVU1RSSUFcbiAgQVU6IC9eW0EtWl1cXGR7N30kLywgLy8gQVVTVFJBTElBXG4gIEJFOiAvXltBLVpdezJ9XFxkezZ9JC8sIC8vIEJFTEdJVU1cbiAgQkc6IC9eXFxkezl9JC8sIC8vIEJVTEdBUklBXG4gIENBOiAvXltBLVpdezJ9XFxkezZ9JC8sIC8vIENBTkFEQVxuICBDSDogL15bQS1aXVxcZHs3fSQvLCAvLyBTV0lUWkVSTEFORFxuICBDTjogL15bR0VdXFxkezh9JC8sIC8vIENISU5BIFtHPU9yZGluYXJ5LCBFPUVsZWN0cm9uaWNdIGZvbGxvd2VkIGJ5IDgtZGlnaXRzXG4gIENZOiAvXltBLVpdKFxcZHs2fXxcXGR7OH0pJC8sIC8vIENZUFJVU1xuICBDWjogL15cXGR7OH0kLywgLy8gQ1pFQ0ggUkVQVUJMSUNcbiAgREU6IC9eW0NGR0hKS0xNTlBSVFZXWFlaMC05XXs5fSQvLCAvLyBHRVJNQU5ZXG4gIERLOiAvXlxcZHs5fSQvLCAvLyBERU5NQVJLXG4gIEVFOiAvXihbQS1aXVxcZHs3fXxbQS1aXXsyfVxcZHs3fSkkLywgLy8gRVNUT05JQSAoSyBmb2xsb3dlZCBieSA3LWRpZ2l0cyksIGUtcGFzc3BvcnRzIGhhdmUgMiBVUFBFUkNBU0UgZm9sbG93ZWQgYnkgNyBkaWdpdHNcbiAgRVM6IC9eW0EtWjAtOV17Mn0oW0EtWjAtOV0/KVxcZHs2fSQvLCAvLyBTUEFJTlxuICBGSTogL15bQS1aXXsyfVxcZHs3fSQvLCAvLyBGSU5MQU5EXG4gIEZSOiAvXlxcZHsyfVtBLVpdezJ9XFxkezV9JC8sIC8vIEZSQU5DRVxuICBHQjogL15cXGR7OX0kLywgLy8gVU5JVEVEIEtJTkdET01cbiAgR1I6IC9eW0EtWl17Mn1cXGR7N30kLywgLy8gR1JFRUNFXG4gIEhSOiAvXlxcZHs5fSQvLCAvLyBDUk9BVElBXG4gIEhVOiAvXltBLVpdezJ9KFxcZHs2fXxcXGR7N30pJC8sIC8vIEhVTkdBUllcbiAgSUU6IC9eW0EtWjAtOV17Mn1cXGR7N30kLywgLy8gSVJFTEFORFxuICBJUzogL14oQSlcXGR7N30kLywgLy8gSUNFTEFORFxuICBJVDogL15bQS1aMC05XXsyfVxcZHs3fSQvLCAvLyBJVEFMWVxuICBKUDogL15bQS1aXXsyfVxcZHs3fSQvLCAvLyBKQVBBTlxuICBLUjogL15bTVNdXFxkezh9JC8sIC8vIFNPVVRIIEtPUkVBLCBSRVBVQkxJQyBPRiBLT1JFQSwgW1M9UFMgUGFzc3BvcnRzLCBNPVBNIFBhc3Nwb3J0c11cbiAgTFQ6IC9eW0EtWjAtOV17OH0kLywgLy8gTElUSFVBTklBXG4gIExVOiAvXltBLVowLTldezh9JC8sIC8vIExVWEVNQlVSR1xuICBMVjogL15bQS1aMC05XXsyfVxcZHs3fSQvLCAvLyBMQVRWSUFcbiAgTVQ6IC9eXFxkezd9JC8sIC8vIE1BTFRBXG4gIE5MOiAvXltBLVpdezJ9W0EtWjAtOV17Nn1cXGQkLywgLy8gTkVUSEVSTEFORFNcbiAgUE86IC9eW0EtWl17Mn1cXGR7N30kLywgLy8gUE9MQU5EXG4gIFBUOiAvXltBLVpdXFxkezZ9JC8sIC8vIFBPUlRVR0FMXG4gIFJPOiAvXlxcZHs4LDl9JC8sIC8vIFJPTUFOSUFcbiAgU0U6IC9eXFxkezh9JC8sIC8vIFNXRURFTlxuICBTTDogL14oUClbQS1aXVxcZHs3fSQvLCAvLyBTTE9WQU5JQVxuICBTSzogL15bMC05QS1aXVxcZHs3fSQvLCAvLyBTTE9WQUtJQVxuICBUUjogL15bQS1aXVxcZHs4fSQvLCAvLyBUVVJLRVlcbiAgVUE6IC9eW0EtWl17Mn1cXGR7Nn0kLywgLy8gVUtSQUlORVxuICBVUzogL15cXGR7OX0kLywgLy8gVU5JVEVEIFNUQVRFU1xufTtcblxuLyoqXG4gKiBDaGVjayBpZiBgdGFyZ2V0YCBpcyBhIHZhbGlkIHBhc3Nwb3J0IG51bWJlclxuICogcmVsYXRpdmUgdG8gcHJvdmlkZWQgYGFyZ2AgSVNPIENvdW50cnkgQ29kZS5cbiAqXG4gKiBAcGFyYW0gdGFyZ2V0IFRoZSBwYXNzcG9ydCBudW1iZXJcbiAqIEBwYXJhbSBhcmcgVGhlIGNvdW50cnkgY29kZVxuICogQHJldHVybiB0cnVlIGlmIHRoZSBgdGFyZ2V0YCBpcyBhIHBhc3Nwb3J0IG51bWJlciwgZmFsc2Ugb3RoZXJ3aXNlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1Bhc3Nwb3J0TnVtYmVyKHRhcmdldDpzdHJpbmcsIGFyZzpzdHJpbmcpIHtcbiAgLyoqIFJlbW92ZSBBbGwgV2hpdGVzcGFjZXMsIENvbnZlcnQgdG8gVVBQRVJDQVNFICovXG4gIGNvbnN0IG5vcm1hbGl6ZWRTdHIgPSB0YXJnZXQucmVwbGFjZSgvXFxzL2csICcnKS50b1VwcGVyQ2FzZSgpO1xuXG4gIHJldHVybiAoYXJnLnRvVXBwZXJDYXNlKCkgaW4gcGFzc3BvcnRSZWdleEJ5Q291bnRyeUNvZGUpICYmXG4gICAgcGFzc3BvcnRSZWdleEJ5Q291bnRyeUNvZGVbYXJnXS50ZXN0KG5vcm1hbGl6ZWRTdHIpO1xufSJdfQ==