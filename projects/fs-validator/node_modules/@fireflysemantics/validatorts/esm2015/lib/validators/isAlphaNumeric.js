import { assertString } from '../util/assertString';
import { alphanumeric } from './alpha';
/**
 * Checks whether `arg` is in alphanumeric and if so validates whether
 * the `target` string conforms to the `arg` locale.
 *
 * @param target The target string
 * @param arg The locale (Defaults to 'en-US')
 * @return true if the `target` string conforms to the `arg` locale, false otherwise
 */
export function isAlphaNumeric(target, arg = 'en-US') {
    assertString(target);
    if (arg in alphanumeric) {
        return alphanumeric[arg].test(target);
    }
    throw new Error(`Invalid locale '${arg}'`);
}
/**
 * The alpha numeric locales
 */
export const isAlphaNumericLocales = Object.keys(alphanumeric);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNBbHBoYU51bWVyaWMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmlyZWZseXNlbWFudGljcy92YWxpZGF0b3J0cy8iLCJzb3VyY2VzIjpbImxpYi92YWxpZGF0b3JzL2lzQWxwaGFOdW1lcmljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRXZDOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLFVBQVUsY0FBYyxDQUFDLE1BQWMsRUFBRSxNQUFjLE9BQU87SUFDbEUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JCLElBQUksR0FBRyxJQUFJLFlBQVksRUFBRTtRQUN2QixPQUFPLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDdkM7SUFDRCxNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRTdHJpbmcgfSBmcm9tICcuLi91dGlsL2Fzc2VydFN0cmluZyc7XG5pbXBvcnQgeyBhbHBoYW51bWVyaWMgfSBmcm9tICcuL2FscGhhJztcblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBgYXJnYCBpcyBpbiBhbHBoYW51bWVyaWMgYW5kIGlmIHNvIHZhbGlkYXRlcyB3aGV0aGVyXG4gKiB0aGUgYHRhcmdldGAgc3RyaW5nIGNvbmZvcm1zIHRvIHRoZSBgYXJnYCBsb2NhbGUuXG4gKiBcbiAqIEBwYXJhbSB0YXJnZXQgVGhlIHRhcmdldCBzdHJpbmdcbiAqIEBwYXJhbSBhcmcgVGhlIGxvY2FsZSAoRGVmYXVsdHMgdG8gJ2VuLVVTJykgXG4gKiBAcmV0dXJuIHRydWUgaWYgdGhlIGB0YXJnZXRgIHN0cmluZyBjb25mb3JtcyB0byB0aGUgYGFyZ2AgbG9jYWxlLCBmYWxzZSBvdGhlcndpc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQWxwaGFOdW1lcmljKHRhcmdldDogc3RyaW5nLCBhcmc6IHN0cmluZyA9ICdlbi1VUycpIHtcbiAgYXNzZXJ0U3RyaW5nKHRhcmdldCk7XG4gIGlmIChhcmcgaW4gYWxwaGFudW1lcmljKSB7XG4gICAgcmV0dXJuIGFscGhhbnVtZXJpY1thcmddLnRlc3QodGFyZ2V0KTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbG9jYWxlICcke2FyZ30nYCk7XG59XG5cbi8qKlxuICogVGhlIGFscGhhIG51bWVyaWMgbG9jYWxlc1xuICovXG5leHBvcnQgY29uc3QgaXNBbHBoYU51bWVyaWNMb2NhbGVzID0gT2JqZWN0LmtleXMoYWxwaGFudW1lcmljKTsiXX0=