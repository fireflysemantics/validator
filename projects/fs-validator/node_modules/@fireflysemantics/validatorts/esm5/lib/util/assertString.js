/**
 * Tests whether `input` is of type string
 * @param input The value that should be a string
 * @throws TypeError if the value is not a string
 */
export function assertString(input) {
    var isString = (typeof input === 'string' || input instanceof String);
    if (!isString) {
        var invalidType = void 0;
        if (input === null) {
            invalidType = 'null';
        }
        else {
            invalidType = typeof input;
            if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {
                invalidType = input.constructor.name;
            }
            else {
                invalidType = "a " + invalidType;
            }
        }
        throw new TypeError("Expected string but received " + invalidType + ".");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0U3RyaW5nLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpcmVmbHlzZW1hbnRpY3MvdmFsaWRhdG9ydHMvIiwic291cmNlcyI6WyJsaWIvdXRpbC9hc3NlcnRTdHJpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxZQUFZLENBQUMsS0FBUztJQUNwQyxJQUFNLFFBQVEsR0FBRyxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxLQUFLLFlBQVksTUFBTSxDQUFDLENBQUM7SUFFeEUsSUFBSSxDQUFDLFFBQVEsRUFBRTtRQUNiLElBQUksV0FBVyxTQUFBLENBQUM7UUFDaEIsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQ2xCLFdBQVcsR0FBRyxNQUFNLENBQUM7U0FDdEI7YUFBTTtZQUNMLFdBQVcsR0FBRyxPQUFPLEtBQUssQ0FBQztZQUMzQixJQUFJLFdBQVcsS0FBSyxRQUFRLElBQUksS0FBSyxDQUFDLFdBQVcsSUFBSSxLQUFLLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDN0YsV0FBVyxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO2FBQ3RDO2lCQUFNO2dCQUNMLFdBQVcsR0FBRyxPQUFLLFdBQWEsQ0FBQzthQUNsQztTQUNGO1FBQ0QsTUFBTSxJQUFJLFNBQVMsQ0FBQyxrQ0FBZ0MsV0FBVyxNQUFHLENBQUMsQ0FBQztLQUNyRTtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRlc3RzIHdoZXRoZXIgYGlucHV0YCBpcyBvZiB0eXBlIHN0cmluZ1xuICogQHBhcmFtIGlucHV0IFRoZSB2YWx1ZSB0aGF0IHNob3VsZCBiZSBhIHN0cmluZ1xuICogQHRocm93cyBUeXBlRXJyb3IgaWYgdGhlIHZhbHVlIGlzIG5vdCBhIHN0cmluZyBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFN0cmluZyhpbnB1dDphbnkpIHtcbiAgY29uc3QgaXNTdHJpbmcgPSAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIFN0cmluZyk7XG5cbiAgaWYgKCFpc1N0cmluZykge1xuICAgIGxldCBpbnZhbGlkVHlwZTtcbiAgICBpZiAoaW5wdXQgPT09IG51bGwpIHtcbiAgICAgIGludmFsaWRUeXBlID0gJ251bGwnO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbnZhbGlkVHlwZSA9IHR5cGVvZiBpbnB1dDtcbiAgICAgIGlmIChpbnZhbGlkVHlwZSA9PT0gJ29iamVjdCcgJiYgaW5wdXQuY29uc3RydWN0b3IgJiYgaW5wdXQuY29uc3RydWN0b3IuaGFzT3duUHJvcGVydHkoJ25hbWUnKSkge1xuICAgICAgICBpbnZhbGlkVHlwZSA9IGlucHV0LmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpbnZhbGlkVHlwZSA9IGBhICR7aW52YWxpZFR5cGV9YDtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgc3RyaW5nIGJ1dCByZWNlaXZlZCAke2ludmFsaWRUeXBlfS5gKTtcbiAgfVxufVxuIl19