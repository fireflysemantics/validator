import { assertString } from '../util/assertString';
/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */
var dateFullYear = /[0-9]{4}/;
var dateMonth = /(0[1-9]|1[0-2])/;
var dateMDay = /([12]\d|0[1-9]|3[01])/;
var timeHour = /([01][0-9]|2[0-3])/;
var timeMinute = /[0-5][0-9]/;
var timeSecond = /([0-5][0-9]|60)/;
var timeSecFrac = /(\.[0-9]+)?/;
var timeNumOffset = new RegExp("[-+]" + timeHour.source + ":" + timeMinute.source);
var timeOffset = new RegExp("([zZ]|" + timeNumOffset.source + ")");
var partialTime = new RegExp(timeHour.source + ":" + timeMinute.source + ":" + timeSecond.source + timeSecFrac.source);
var fullDate = new RegExp(dateFullYear.source + "-" + dateMonth.source + "-" + dateMDay.source);
var fullTime = new RegExp("" + partialTime.source + timeOffset.source);
var rfc3339 = new RegExp(fullDate.source + "[ tT]" + fullTime.source);
/**
 * Check if `target` is a valid RFC3339 timestamp
 *
 * @param target The time stamp
 * @return true if the `target` is a valid RFC3339 timestamp, false otherwise
 *
 * @example
```
const isRFC3339:boolean = isRFC3339('2002-10-02T15:00:00Z')
```
 */
export function isRFC3339(target) {
    assertString(target);
    return rfc3339.test(target);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNSRkMzMzM5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpcmVmbHlzZW1hbnRpY3MvdmFsaWRhdG9ydHMvIiwic291cmNlcyI6WyJsaWIvdmFsaWRhdG9ycy9pc1JGQzMzMzkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXBELDhEQUE4RDtBQUU5RCxJQUFNLFlBQVksR0FBRyxVQUFVLENBQUM7QUFDaEMsSUFBTSxTQUFTLEdBQUcsaUJBQWlCLENBQUM7QUFDcEMsSUFBTSxRQUFRLEdBQUcsdUJBQXVCLENBQUM7QUFFekMsSUFBTSxRQUFRLEdBQUcsb0JBQW9CLENBQUM7QUFDdEMsSUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDO0FBQ2hDLElBQU0sVUFBVSxHQUFHLGlCQUFpQixDQUFDO0FBRXJDLElBQU0sV0FBVyxHQUFHLGFBQWEsQ0FBQztBQUNsQyxJQUFNLGFBQWEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxTQUFPLFFBQVEsQ0FBQyxNQUFNLFNBQUksVUFBVSxDQUFDLE1BQVEsQ0FBQyxDQUFDO0FBQ2hGLElBQU0sVUFBVSxHQUFHLElBQUksTUFBTSxDQUFDLFdBQVMsYUFBYSxDQUFDLE1BQU0sTUFBRyxDQUFDLENBQUM7QUFFaEUsSUFBTSxXQUFXLEdBQUcsSUFBSSxNQUFNLENBQUksUUFBUSxDQUFDLE1BQU0sU0FBSSxVQUFVLENBQUMsTUFBTSxTQUFJLFVBQVUsQ0FBQyxNQUFNLEdBQUcsV0FBVyxDQUFDLE1BQVEsQ0FBQyxDQUFDO0FBRXBILElBQU0sUUFBUSxHQUFHLElBQUksTUFBTSxDQUFJLFlBQVksQ0FBQyxNQUFNLFNBQUksU0FBUyxDQUFDLE1BQU0sU0FBSSxRQUFRLENBQUMsTUFBUSxDQUFDLENBQUM7QUFDN0YsSUFBTSxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsS0FBRyxXQUFXLENBQUMsTUFBTSxHQUFHLFVBQVUsQ0FBQyxNQUFRLENBQUMsQ0FBQztBQUV6RSxJQUFNLE9BQU8sR0FBRyxJQUFJLE1BQU0sQ0FBSSxRQUFRLENBQUMsTUFBTSxhQUFRLFFBQVEsQ0FBQyxNQUFRLENBQUMsQ0FBQztBQUV4RTs7Ozs7Ozs7OztHQVVHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxNQUFhO0lBQ3JDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQixPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDOUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydFN0cmluZyB9IGZyb20gJy4uL3V0aWwvYXNzZXJ0U3RyaW5nJztcblxuLyogQmFzZWQgb24gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzMzMzkjc2VjdGlvbi01LjYgKi9cblxuY29uc3QgZGF0ZUZ1bGxZZWFyID0gL1swLTldezR9LztcbmNvbnN0IGRhdGVNb250aCA9IC8oMFsxLTldfDFbMC0yXSkvO1xuY29uc3QgZGF0ZU1EYXkgPSAvKFsxMl1cXGR8MFsxLTldfDNbMDFdKS87XG5cbmNvbnN0IHRpbWVIb3VyID0gLyhbMDFdWzAtOV18MlswLTNdKS87XG5jb25zdCB0aW1lTWludXRlID0gL1swLTVdWzAtOV0vO1xuY29uc3QgdGltZVNlY29uZCA9IC8oWzAtNV1bMC05XXw2MCkvO1xuXG5jb25zdCB0aW1lU2VjRnJhYyA9IC8oXFwuWzAtOV0rKT8vO1xuY29uc3QgdGltZU51bU9mZnNldCA9IG5ldyBSZWdFeHAoYFstK10ke3RpbWVIb3VyLnNvdXJjZX06JHt0aW1lTWludXRlLnNvdXJjZX1gKTtcbmNvbnN0IHRpbWVPZmZzZXQgPSBuZXcgUmVnRXhwKGAoW3paXXwke3RpbWVOdW1PZmZzZXQuc291cmNlfSlgKTtcblxuY29uc3QgcGFydGlhbFRpbWUgPSBuZXcgUmVnRXhwKGAke3RpbWVIb3VyLnNvdXJjZX06JHt0aW1lTWludXRlLnNvdXJjZX06JHt0aW1lU2Vjb25kLnNvdXJjZX0ke3RpbWVTZWNGcmFjLnNvdXJjZX1gKTtcblxuY29uc3QgZnVsbERhdGUgPSBuZXcgUmVnRXhwKGAke2RhdGVGdWxsWWVhci5zb3VyY2V9LSR7ZGF0ZU1vbnRoLnNvdXJjZX0tJHtkYXRlTURheS5zb3VyY2V9YCk7XG5jb25zdCBmdWxsVGltZSA9IG5ldyBSZWdFeHAoYCR7cGFydGlhbFRpbWUuc291cmNlfSR7dGltZU9mZnNldC5zb3VyY2V9YCk7XG5cbmNvbnN0IHJmYzMzMzkgPSBuZXcgUmVnRXhwKGAke2Z1bGxEYXRlLnNvdXJjZX1bIHRUXSR7ZnVsbFRpbWUuc291cmNlfWApO1xuXG4vKipcbiAqIENoZWNrIGlmIGB0YXJnZXRgIGlzIGEgdmFsaWQgUkZDMzMzOSB0aW1lc3RhbXBcbiAqXG4gKiBAcGFyYW0gdGFyZ2V0IFRoZSB0aW1lIHN0YW1wXG4gKiBAcmV0dXJuIHRydWUgaWYgdGhlIGB0YXJnZXRgIGlzIGEgdmFsaWQgUkZDMzMzOSB0aW1lc3RhbXAsIGZhbHNlIG90aGVyd2lzZVxuICogXG4gKiBAZXhhbXBsZVxuYGBgXG5jb25zdCBpc1JGQzMzMzk6Ym9vbGVhbiA9IGlzUkZDMzMzOSgnMjAwMi0xMC0wMlQxNTowMDowMFonKVxuYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1JGQzMzMzkodGFyZ2V0OnN0cmluZykge1xuICBhc3NlcnRTdHJpbmcodGFyZ2V0KTtcbiAgcmV0dXJuIHJmYzMzMzkudGVzdCh0YXJnZXQpO1xufVxuIl19