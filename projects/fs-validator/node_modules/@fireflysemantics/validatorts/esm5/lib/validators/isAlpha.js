import { assertString } from '../util/assertString';
import { alpha } from './alpha';
/**
 * Checks whether `arg` is in alpha and if so validates whether
 * the `target` string conforms to the `arg` locale.
 *
 * @param target The target string to compare to
 * @param arg The argument that might equal the target
 * @return true if the `target` date comes after the `arg` date, false otherwise
 */
export function isAlpha(target, arg) {
    if (arg === void 0) { arg = 'en-US'; }
    assertString(target);
    if (arg in alpha) {
        return alpha[arg].test(target);
    }
    throw new Error("Invalid locale '" + arg + "'");
}
/**
 * The alpha locales
 */
export var isAlphaLocales = Object.keys(alpha);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNBbHBoYS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXJlZmx5c2VtYW50aWNzL3ZhbGlkYXRvcnRzLyIsInNvdXJjZXMiOlsibGliL3ZhbGlkYXRvcnMvaXNBbHBoYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDcEQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVoQzs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxVQUFVLE9BQU8sQ0FBQyxNQUFjLEVBQUUsR0FBcUI7SUFBckIsb0JBQUEsRUFBQSxhQUFxQjtJQUMzRCxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckIsSUFBSSxHQUFHLElBQUksS0FBSyxFQUFFO1FBQ2hCLE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNoQztJQUNELE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQW1CLEdBQUcsTUFBRyxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRTdHJpbmcgfSBmcm9tICcuLi91dGlsL2Fzc2VydFN0cmluZyc7XG5pbXBvcnQgeyBhbHBoYSB9IGZyb20gJy4vYWxwaGEnO1xuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGBhcmdgIGlzIGluIGFscGhhIGFuZCBpZiBzbyB2YWxpZGF0ZXMgd2hldGhlclxuICogdGhlIGB0YXJnZXRgIHN0cmluZyBjb25mb3JtcyB0byB0aGUgYGFyZ2AgbG9jYWxlLlxuICogXG4gKiBAcGFyYW0gdGFyZ2V0IFRoZSB0YXJnZXQgc3RyaW5nIHRvIGNvbXBhcmUgdG9cbiAqIEBwYXJhbSBhcmcgVGhlIGFyZ3VtZW50IHRoYXQgbWlnaHQgZXF1YWwgdGhlIHRhcmdldCBcbiAqIEByZXR1cm4gdHJ1ZSBpZiB0aGUgYHRhcmdldGAgZGF0ZSBjb21lcyBhZnRlciB0aGUgYGFyZ2AgZGF0ZSwgZmFsc2Ugb3RoZXJ3aXNlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0FscGhhKHRhcmdldDogc3RyaW5nLCBhcmc6IHN0cmluZyA9ICdlbi1VUycpIHtcbiAgYXNzZXJ0U3RyaW5nKHRhcmdldCk7XG4gIGlmIChhcmcgaW4gYWxwaGEpIHtcbiAgICByZXR1cm4gYWxwaGFbYXJnXS50ZXN0KHRhcmdldCk7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGxvY2FsZSAnJHthcmd9J2ApO1xufVxuXG4vKipcbiAqIFRoZSBhbHBoYSBsb2NhbGVzXG4gKi9cbmV4cG9ydCBjb25zdCBpc0FscGhhTG9jYWxlcyA9IE9iamVjdC5rZXlzKGFscGhhKTsiXX0=