import { assertString } from '../util/assertString';
var issn = '^\\d{4}-?\\d{3}[\\dX]$';
/**
 * Checks whether the `target` string is a valid ISSN
 *
 * @param target The target string
 * @param options The options
 * @return true if the `target` is a valid ISSN, false otherwise
 */
export function isISSN(str, options) {
    if (options === void 0) { options = {}; }
    assertString(str);
    var testIssn = issn;
    testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;
    testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');
    if (!testIssn.test(str)) {
        return false;
    }
    var digits = str.replace('-', '').toUpperCase();
    var checksum = 0;
    for (var i = 0; i < digits.length; i++) {
        var digit = digits[i];
        checksum += (digit === 'X' ? 10 : +digit) * (8 - i);
    }
    return checksum % 11 === 0;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNJU1NOLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpcmVmbHlzZW1hbnRpY3MvdmFsaWRhdG9ydHMvIiwic291cmNlcyI6WyJsaWIvdmFsaWRhdG9ycy9pc0lTU04udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXBELElBQU0sSUFBSSxHQUFHLHdCQUF3QixDQUFDO0FBRXRDOzs7Ozs7R0FNRztBQUNILE1BQU0sVUFBVSxNQUFNLENBQUMsR0FBRyxFQUFFLE9BQWlCO0lBQWpCLHdCQUFBLEVBQUEsWUFBaUI7SUFDM0MsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2xCLElBQUksUUFBUSxHQUFRLElBQUksQ0FBQztJQUN6QixRQUFRLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztJQUN6RSxRQUFRLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksTUFBTSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNyRixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUN2QixPQUFPLEtBQUssQ0FBQztLQUNkO0lBQ0QsSUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEQsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3RDLElBQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4QixRQUFRLElBQUksQ0FBQyxLQUFLLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDckQ7SUFDRCxPQUFPLFFBQVEsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQzdCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRTdHJpbmcgfSBmcm9tICcuLi91dGlsL2Fzc2VydFN0cmluZyc7XG5cbmNvbnN0IGlzc24gPSAnXlxcXFxkezR9LT9cXFxcZHszfVtcXFxcZFhdJCc7XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgdGhlIGB0YXJnZXRgIHN0cmluZyBpcyBhIHZhbGlkIElTU05cbiAqIFxuICogQHBhcmFtIHRhcmdldCBUaGUgdGFyZ2V0IHN0cmluZ1xuICogQHBhcmFtIG9wdGlvbnMgVGhlIG9wdGlvbnNcbiAqIEByZXR1cm4gdHJ1ZSBpZiB0aGUgYHRhcmdldGAgaXMgYSB2YWxpZCBJU1NOLCBmYWxzZSBvdGhlcndpc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzSVNTTihzdHIsIG9wdGlvbnM6IGFueSA9IHt9KSB7XG4gIGFzc2VydFN0cmluZyhzdHIpO1xuICBsZXQgdGVzdElzc246IGFueSA9IGlzc247XG4gIHRlc3RJc3NuID0gb3B0aW9ucy5yZXF1aXJlX2h5cGhlbiA/IHRlc3RJc3NuLnJlcGxhY2UoJz8nLCAnJykgOiB0ZXN0SXNzbjtcbiAgdGVzdElzc24gPSBvcHRpb25zLmNhc2Vfc2Vuc2l0aXZlID8gbmV3IFJlZ0V4cCh0ZXN0SXNzbikgOiBuZXcgUmVnRXhwKHRlc3RJc3NuLCAnaScpO1xuICBpZiAoIXRlc3RJc3NuLnRlc3Qoc3RyKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBjb25zdCBkaWdpdHMgPSBzdHIucmVwbGFjZSgnLScsICcnKS50b1VwcGVyQ2FzZSgpO1xuICBsZXQgY2hlY2tzdW0gPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGRpZ2l0cy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGRpZ2l0ID0gZGlnaXRzW2ldO1xuICAgIGNoZWNrc3VtICs9IChkaWdpdCA9PT0gJ1gnID8gMTAgOiArZGlnaXQpICogKDggLSBpKTtcbiAgfVxuICByZXR1cm4gY2hlY2tzdW0gJSAxMSA9PT0gMDtcbn1cbiJdfQ==