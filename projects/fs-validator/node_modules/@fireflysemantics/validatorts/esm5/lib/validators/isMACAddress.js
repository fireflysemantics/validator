import { assertString } from '../util/assertString';
var macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;
var macAddressNoColons = /^([0-9a-fA-F]){12}$/;
var macAddressWithHyphen = /^([0-9a-fA-F][0-9a-fA-F]-){5}([0-9a-fA-F][0-9a-fA-F])$/;
var macAddressWithSpaces = /^([0-9a-fA-F][0-9a-fA-F]\s){5}([0-9a-fA-F][0-9a-fA-F])$/;
/**
 * Checks whether the `target` string is a valid MAC Address
 *
 * @param target The target string
 * @param options The options
 * @return true if the `target` is a valid Mac Address, false otherwise
 */
export function isMACAddress(target, options) {
    assertString(target);
    if (options && options.no_colons) {
        return macAddressNoColons.test(target);
    }
    return macAddress.test(target) || macAddressWithHyphen.test(target) || macAddressWithSpaces.test(target);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNNQUNBZGRyZXNzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpcmVmbHlzZW1hbnRpY3MvdmFsaWRhdG9ydHMvIiwic291cmNlcyI6WyJsaWIvdmFsaWRhdG9ycy9pc01BQ0FkZHJlc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXBELElBQU0sVUFBVSxHQUFHLHdEQUF3RCxDQUFDO0FBQzVFLElBQU0sa0JBQWtCLEdBQUcscUJBQXFCLENBQUM7QUFDakQsSUFBTSxvQkFBb0IsR0FBRyx3REFBd0QsQ0FBQztBQUN0RixJQUFNLG9CQUFvQixHQUFHLHlEQUF5RCxDQUFDO0FBRXZGOzs7Ozs7R0FNRztBQUNILE1BQU0sVUFBVSxZQUFZLENBQUMsTUFBYSxFQUFFLE9BQU87SUFDakQsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JCLElBQUksT0FBTyxJQUFJLE9BQU8sQ0FBQyxTQUFTLEVBQUU7UUFDaEMsT0FBTyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEM7SUFDRCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksb0JBQW9CLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLG9CQUFvQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzRyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0U3RyaW5nIH0gZnJvbSAnLi4vdXRpbC9hc3NlcnRTdHJpbmcnO1xuXG5jb25zdCBtYWNBZGRyZXNzID0gL14oWzAtOWEtZkEtRl1bMC05YS1mQS1GXTopezV9KFswLTlhLWZBLUZdWzAtOWEtZkEtRl0pJC87XG5jb25zdCBtYWNBZGRyZXNzTm9Db2xvbnMgPSAvXihbMC05YS1mQS1GXSl7MTJ9JC87XG5jb25zdCBtYWNBZGRyZXNzV2l0aEh5cGhlbiA9IC9eKFswLTlhLWZBLUZdWzAtOWEtZkEtRl0tKXs1fShbMC05YS1mQS1GXVswLTlhLWZBLUZdKSQvO1xuY29uc3QgbWFjQWRkcmVzc1dpdGhTcGFjZXMgPSAvXihbMC05YS1mQS1GXVswLTlhLWZBLUZdXFxzKXs1fShbMC05YS1mQS1GXVswLTlhLWZBLUZdKSQvO1xuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIHRoZSBgdGFyZ2V0YCBzdHJpbmcgaXMgYSB2YWxpZCBNQUMgQWRkcmVzc1xuICogXG4gKiBAcGFyYW0gdGFyZ2V0IFRoZSB0YXJnZXQgc3RyaW5nXG4gKiBAcGFyYW0gb3B0aW9ucyBUaGUgb3B0aW9uc1xuICogQHJldHVybiB0cnVlIGlmIHRoZSBgdGFyZ2V0YCBpcyBhIHZhbGlkIE1hYyBBZGRyZXNzLCBmYWxzZSBvdGhlcndpc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTUFDQWRkcmVzcyh0YXJnZXQ6c3RyaW5nLCBvcHRpb25zKSB7XG4gIGFzc2VydFN0cmluZyh0YXJnZXQpO1xuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm5vX2NvbG9ucykge1xuICAgIHJldHVybiBtYWNBZGRyZXNzTm9Db2xvbnMudGVzdCh0YXJnZXQpO1xuICB9XG4gIHJldHVybiBtYWNBZGRyZXNzLnRlc3QodGFyZ2V0KSB8fCBtYWNBZGRyZXNzV2l0aEh5cGhlbi50ZXN0KHRhcmdldCkgfHwgbWFjQWRkcmVzc1dpdGhTcGFjZXMudGVzdCh0YXJnZXQpO1xufVxuIl19