import { assertString } from '../util/assertString';
var uuid = {
    3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
    4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
    5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
};
/**
 * Checks whether the `target` is a valid UUID
 *
 * @param target The target string
 * @param version The version
 * @return true if the `target` is  a valid UUID, false otherwise
 */
export function isUUID(str, version) {
    version = version ? version : 'all';
    assertString(str);
    var pattern = uuid[version];
    return pattern && pattern.test(str);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNVVUlELmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpcmVmbHlzZW1hbnRpY3MvdmFsaWRhdG9ydHMvIiwic291cmNlcyI6WyJsaWIvdmFsaWRhdG9ycy9pc1VVSUQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXBELElBQU0sSUFBSSxHQUFHO0lBQ1gsQ0FBQyxFQUFFLGtFQUFrRTtJQUNyRSxDQUFDLEVBQUUsd0VBQXdFO0lBQzNFLENBQUMsRUFBRSx3RUFBd0U7SUFDM0UsR0FBRyxFQUFFLGlFQUFpRTtDQUN2RSxDQUFDO0FBRUY7Ozs7OztHQU1HO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FBQyxHQUFHLEVBQUUsT0FBUTtJQUNsQyxPQUFPLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQTtJQUNuQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEIsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlCLE9BQU8sT0FBTyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydFN0cmluZyB9IGZyb20gJy4uL3V0aWwvYXNzZXJ0U3RyaW5nJztcblxuY29uc3QgdXVpZCA9IHtcbiAgMzogL15bMC05QS1GXXs4fS1bMC05QS1GXXs0fS0zWzAtOUEtRl17M30tWzAtOUEtRl17NH0tWzAtOUEtRl17MTJ9JC9pLFxuICA0OiAvXlswLTlBLUZdezh9LVswLTlBLUZdezR9LTRbMC05QS1GXXszfS1bODlBQl1bMC05QS1GXXszfS1bMC05QS1GXXsxMn0kL2ksXG4gIDU6IC9eWzAtOUEtRl17OH0tWzAtOUEtRl17NH0tNVswLTlBLUZdezN9LVs4OUFCXVswLTlBLUZdezN9LVswLTlBLUZdezEyfSQvaSxcbiAgYWxsOiAvXlswLTlBLUZdezh9LVswLTlBLUZdezR9LVswLTlBLUZdezR9LVswLTlBLUZdezR9LVswLTlBLUZdezEyfSQvaSxcbn07XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgdGhlIGB0YXJnZXRgIGlzIGEgdmFsaWQgVVVJRFxuICogXG4gKiBAcGFyYW0gdGFyZ2V0IFRoZSB0YXJnZXQgc3RyaW5nXG4gKiBAcGFyYW0gdmVyc2lvbiBUaGUgdmVyc2lvblxuICogQHJldHVybiB0cnVlIGlmIHRoZSBgdGFyZ2V0YCBpcyAgYSB2YWxpZCBVVUlELCBmYWxzZSBvdGhlcndpc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVVVJRChzdHIsIHZlcnNpb24/KSB7XG4gIHZlcnNpb24gPSB2ZXJzaW9uID8gdmVyc2lvbiA6ICdhbGwnXG4gIGFzc2VydFN0cmluZyhzdHIpO1xuICBjb25zdCBwYXR0ZXJuID0gdXVpZFt2ZXJzaW9uXTtcbiAgcmV0dXJuIHBhdHRlcm4gJiYgcGF0dGVybi50ZXN0KHN0cik7XG59Il19